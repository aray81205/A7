{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\alphacamp\\\\todolist-react-starter\\\\src\\\\Contexts\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { login, register, checkPermission } from 'API/Auth';\nimport { createContext, useState, useEffect } from 'react';\nimport * as jwt from 'jsonwebtoken';\nimport { useLocation } from 'react-router-dom';\nimport { useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultAuthContext = {\n  isAuthenticated: false,\n  currentMember: null,\n  register: null,\n  login: null,\n  logout: null\n};\nconst AuthContext = /*#__PURE__*/createContext(defaultAuthContext);\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = _ref => {\n  _s2();\n  let {\n    children\n  } = _ref;\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [payload, setPayload] = useState(null);\n  const {\n    pathname\n  } = useLocation();\n  useEffect(() => {\n    const checkTokenIsValid = async () => {\n      const authToken = localStorage.getItem('authToken');\n      if (!authToken) {\n        setIsAuthenticated(false);\n        setPayload(null);\n        return;\n      }\n      const result = await checkPermission(authToken);\n      if (result) {\n        setIsAuthenticated(true);\n        const tempPayload = jwt.decode(authToken);\n        setPayload(tempPayload);\n      } else {\n        setIsAuthenticated(false);\n        setPayload(null);\n      }\n    };\n    checkTokenIsValid();\n  }, [pathname]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      currentMember: payload && {\n        id: payload.sub,\n        name: payload.name\n      },\n      register: async data => {\n        const {\n          success,\n          authToken\n        } = await register({\n          username: data.username,\n          email: data.email,\n          password: data.password\n        });\n        const tempPayload = jwt.decode(authToken);\n        if (tempPayload) {\n          setPayload(tempPayload);\n          setIsAuthenticated(true);\n          localStorage.setItem('authToken', authToken);\n        } else {\n          setPayload(null);\n          setIsAuthenticated(false);\n        }\n        return success;\n      },\n      login: async data => {\n        const {\n          success,\n          authToken\n        } = await login({\n          username: data.username,\n          password: data.password\n        });\n        const tempPayload = jwt.decode(authToken);\n        if (tempPayload) {\n          setPayload(tempPayload);\n          setIsAuthenticated(true);\n          localStorage.setItem('authToken', authToken);\n        } else {\n          setPayload(null);\n          setIsAuthenticated(false);\n        }\n        return success;\n      },\n      logout: () => {\n        localStorage.removeItem('authToken');\n        setPayload(null);\n        setIsAuthenticated(false);\n      }\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"wtihcEB86EXT6shY4tnrdtrhlRc=\", false, function () {\n  return [useLocation];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["login","register","checkPermission","createContext","useState","useEffect","jwt","useLocation","useContext","jsxDEV","_jsxDEV","defaultAuthContext","isAuthenticated","currentMember","logout","AuthContext","useAuth","_s","AuthProvider","_ref","_s2","children","setIsAuthenticated","payload","setPayload","pathname","checkTokenIsValid","authToken","localStorage","getItem","result","tempPayload","decode","Provider","value","id","sub","name","data","success","username","email","password","setItem","removeItem","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/alphacamp/todolist-react-starter/src/Contexts/AuthContext.jsx"],"sourcesContent":["import { login, register, checkPermission } from 'API/Auth';\r\nimport { createContext, useState, useEffect } from 'react';\r\nimport * as jwt from 'jsonwebtoken';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useContext } from 'react';\r\n\r\nconst defaultAuthContext = {\r\n  isAuthenticated: false,\r\n  currentMember: null,\r\n  register: null,\r\n  login: null,\r\n  logout: null,\r\n};\r\n\r\nconst AuthContext = createContext(defaultAuthContext);\r\nexport const useAuth = () => useContext(AuthContext);\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [payload, setPayload] = useState(null);\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    const checkTokenIsValid = async () => {\r\n      const authToken = localStorage.getItem('authToken');\r\n      if (!authToken) {\r\n        setIsAuthenticated(false);\r\n        setPayload(null);\r\n        return;\r\n      }\r\n      const result = await checkPermission(authToken);\r\n      if (result) {\r\n        setIsAuthenticated(true);\r\n        const tempPayload = jwt.decode(authToken);\r\n        setPayload(tempPayload);\r\n      } else {\r\n        setIsAuthenticated(false);\r\n        setPayload(null);\r\n      }\r\n    };\r\n\r\n    checkTokenIsValid();\r\n  }, [pathname]);\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        isAuthenticated,\r\n        currentMember: payload && {\r\n          id: payload.sub,\r\n          name: payload.name,\r\n        },\r\n        register: async (data) => {\r\n          const { success, authToken } = await register({\r\n            username: data.username,\r\n            email: data.email,\r\n            password: data.password,\r\n          });\r\n          const tempPayload = jwt.decode(authToken);\r\n          if (tempPayload) {\r\n            setPayload(tempPayload);\r\n            setIsAuthenticated(true);\r\n            localStorage.setItem('authToken', authToken);\r\n          } else {\r\n            setPayload(null);\r\n            setIsAuthenticated(false);\r\n          }\r\n          return success;\r\n        },\r\n        login: async (data) => {\r\n          const { success, authToken } = await login({\r\n            username: data.username,\r\n            password: data.password,\r\n          });\r\n          const tempPayload = jwt.decode(authToken);\r\n          if (tempPayload) {\r\n            setPayload(tempPayload);\r\n            setIsAuthenticated(true);\r\n            localStorage.setItem('authToken', authToken);\r\n          } else {\r\n            setPayload(null);\r\n            setIsAuthenticated(false);\r\n          }\r\n          return success;\r\n        },\r\n        logout: () => {\r\n          localStorage.removeItem('authToken');\r\n          setPayload(null);\r\n          setIsAuthenticated(false);\r\n        },\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}