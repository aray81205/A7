{"ast":null,"code":"import axios from 'axios';\nconst baseUrl = 'http://localhost:3001';\nexport const getTodos = async () => {\n  try {\n    const res = await axios.get(`${baseUrl}/todos`);\n    return res.data;\n  } catch (error) {\n    console.error('[Get Todos failed]: ', error);\n  }\n};\nexport const createTodo = async payload => {\n  const {\n    title,\n    isDone\n  } = payload;\n  try {\n    const res = await axios.post(`${baseUrl}/todos`, {\n      title,\n      isDone\n    });\n    return res.data;\n  } catch (error) {\n    console.error('[Create Todo failed]: ', error);\n  }\n};\nexport const patchTodo = async payload => {\n  const {\n    id,\n    title,\n    isDone\n  } = payload;\n  try {\n    const res = await axios.patch(`${baseUrl}/todos/${id}`, {\n      title,\n      isDone\n    });\n    return res.data;\n  } catch (error) {\n    console.error('[Patch Todo failed]:', error);\n  }\n};\nexport const deleteTodo = async id => {\n  try {\n    const res = await axios.delete(`${baseUrl}/todos/${id}`);\n    return res.data;\n  } catch (error) {\n    console.error('[Delete Todo failed]:', error);\n  }\n};","map":{"version":3,"names":["axios","baseUrl","getTodos","res","get","data","error","console","createTodo","payload","title","isDone","post","patchTodo","id","patch","deleteTodo","delete"],"sources":["C:/Users/User/alphacamp/todolist-react-starter/src/API/todos.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst baseUrl = 'http://localhost:3001';\r\nexport const getTodos = async () => {\r\n  try {\r\n    const res = await axios.get(`${baseUrl}/todos`);\r\n    return res.data;\r\n  } catch (error) {\r\n    console.error('[Get Todos failed]: ', error);\r\n  }\r\n};\r\n\r\nexport const createTodo = async (payload) => {\r\n  const { title, isDone } = payload;\r\n  try {\r\n    const res = await axios.post(`${baseUrl}/todos`, {\r\n      title,\r\n      isDone,\r\n    });\r\n    return res.data;\r\n  } catch (error) {\r\n    console.error('[Create Todo failed]: ', error);\r\n  }\r\n};\r\n\r\nexport const patchTodo = async (payload) => {\r\n  const { id, title, isDone } = payload;\r\n  try {\r\n    const res = await axios.patch(`${baseUrl}/todos/${id}`, {\r\n      title,\r\n      isDone,\r\n    });\r\n    return res.data;\r\n  } catch (error) {\r\n    console.error('[Patch Todo failed]:', error);\r\n  }\r\n};\r\n\r\nexport const deleteTodo = async (id) => {\r\n  try {\r\n    const res = await axios.delete(`${baseUrl}/todos/${id}`);\r\n    return res.data;\r\n  } catch (error) {\r\n    console.error('[Delete Todo failed]:', error);\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,uBAAuB;AACvC,OAAO,MAAMC,QAAQ,GAAG,MAAAA,CAAA,KAAY;EAClC,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAE,GAAEH,OAAQ,QAAO,CAAC;IAC/C,OAAOE,GAAG,CAACE,IAAI;EACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;EAC9C;AACF,CAAC;AAED,OAAO,MAAME,UAAU,GAAG,MAAOC,OAAO,IAAK;EAC3C,MAAM;IAAEC,KAAK;IAAEC;EAAO,CAAC,GAAGF,OAAO;EACjC,IAAI;IACF,MAAMN,GAAG,GAAG,MAAMH,KAAK,CAACY,IAAI,CAAE,GAAEX,OAAQ,QAAO,EAAE;MAC/CS,KAAK;MACLC;IACF,CAAC,CAAC;IACF,OAAOR,GAAG,CAACE,IAAI;EACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;EAChD;AACF,CAAC;AAED,OAAO,MAAMO,SAAS,GAAG,MAAOJ,OAAO,IAAK;EAC1C,MAAM;IAAEK,EAAE;IAAEJ,KAAK;IAAEC;EAAO,CAAC,GAAGF,OAAO;EACrC,IAAI;IACF,MAAMN,GAAG,GAAG,MAAMH,KAAK,CAACe,KAAK,CAAE,GAAEd,OAAQ,UAASa,EAAG,EAAC,EAAE;MACtDJ,KAAK;MACLC;IACF,CAAC,CAAC;IACF,OAAOR,GAAG,CAACE,IAAI;EACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;EAC9C;AACF,CAAC;AAED,OAAO,MAAMU,UAAU,GAAG,MAAOF,EAAE,IAAK;EACtC,IAAI;IACF,MAAMX,GAAG,GAAG,MAAMH,KAAK,CAACiB,MAAM,CAAE,GAAEhB,OAAQ,UAASa,EAAG,EAAC,CAAC;IACxD,OAAOX,GAAG,CAACE,IAAI;EACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;EAC/C;AACF,CAAC"},"metadata":{},"sourceType":"module"}