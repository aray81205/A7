{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\alphacamp\\\\todolist-react-starter\\\\src\\\\components\\\\TodoItem.jsx\",\n  _s = $RefreshSig$();\nimport styled from 'styled-components';\nimport clsx from 'clsx';\nimport { useRef } from 'react';\nimport { CheckActiveIcon, CheckCircleIcon, CheckHoverIcon } from 'assets/images';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledTaskItem = styled.div`\n  min-height: 52px;\n  display: flex;\n  align-items: center;\n  position: relative;\n  word-wrap: break-word;\n  word-break: break-word;\n  padding: 0 12px;\n  box-shadow: 0 17px 0 -16px #e5e5e5;\n  flex-wrap: wrap;\n\n  .task-item-body-input {\n    user-select: none;\n    display: none;\n    flex: 1;\n    padding: 8px 0px;\n    border: 0;\n    outline: 0;\n    font-size: 1rem;\n\n    &::placeholder {\n      color: var(--gray);\n      font-size: 13px;\n    }\n  }\n\n  &:hover {\n    background: #fff3eb;\n    box-shadow: inset 0 0 0 1px #fff3eb;\n\n    .task-item-action .btn-destroy {\n      display: inline-flex;\n    }\n  }\n\n  &.done {\n    .task-item-body {\n      color: var(--gray);\n      text-decoration: line-through;\n    }\n\n    .icon-checked {\n      background-image: url(${CheckActiveIcon});\n    }\n  }\n\n  &.edit {\n    .task-item-body-input {\n      display: block;\n    }\n    .task-item-body-text {\n      display: none;\n    }\n    .task-item-action {\n      display: none;\n    }\n  }\n\n  .task-item-checked {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n  .task-item-body {\n    font-weight: 400;\n    padding: 8px 12px;\n    flex: 1;\n    display: flex;\n  }\n\n  .task-item-action {\n    .btn-destroy {\n      display: none;\n      font-size: 30px;\n      transition: color 0.2s ease-out;\n      font-weight: 300;\n      &:after {\n        content: '×';\n      }\n    }\n  }\n\n  .icon-checked {\n    background-image: url(${CheckCircleIcon});\n    background-position: center;\n    background-repeat: no-repeat;\n\n    &:hover {\n      transition: background-image 0.5s;\n      background-image: url(${CheckHoverIcon});\n    }\n  }\n`;\n//todo.isEdit\n_c = StyledTaskItem;\nconst TodoItem = _ref => {\n  _s();\n  let {\n    todo,\n    onToggleDone,\n    onSave,\n    onDelete,\n    onChangeMode\n  } = _ref;\n  const inputRef = useRef(null);\n  const handleKeyDown = event => {\n    if (inputRef.current.value.length > 0 && event.key === 'Enter') {\n      onSave === null || onSave === void 0 ? void 0 : onSave({\n        id: todo.id,\n        title: inputRef.current.value\n      });\n    }\n    if (event.key === 'Escape') {\n      onChangeMode === null || onChangeMode === void 0 ? void 0 : onChangeMode({\n        id: todo.id,\n        isEdit: false\n      });\n    }\n  };\n  const handleOnDelete = () => {\n    onDelete === null || onDelete === void 0 ? void 0 : onDelete(todo.id);\n  };\n  return /*#__PURE__*/_jsxDEV(StyledTaskItem, {\n    className: clsx('', {\n      done: todo.isDone,\n      edit: todo.isEdit\n    }),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-item-checked\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"icon icon-checked\",\n        onClick: () => onToggleDone === null || onToggleDone === void 0 ? void 0 : onToggleDone(todo.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-item-body\",\n      onDoubleClick: () => {\n        onChangeMode === null || onChangeMode === void 0 ? void 0 : onChangeMode({\n          id: todo.id,\n          isEdit: true\n        });\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"task-item-body-text\",\n        children: todo.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: inputRef,\n        className: \"task-item-body-input\",\n        onKeyDown: handleKeyDown,\n        defaultValue: todo.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-item-action \",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-reset btn-destroy icon\",\n        onClick: handleOnDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoItem, \"iD9XNNsNOlNDckBemnvlLS+aHYk=\");\n_c2 = TodoItem;\nexport default TodoItem;\nvar _c, _c2;\n$RefreshReg$(_c, \"StyledTaskItem\");\n$RefreshReg$(_c2, \"TodoItem\");","map":{"version":3,"names":["styled","clsx","useRef","CheckActiveIcon","CheckCircleIcon","CheckHoverIcon","jsxDEV","_jsxDEV","StyledTaskItem","div","_c","TodoItem","_ref","_s","todo","onToggleDone","onSave","onDelete","onChangeMode","inputRef","handleKeyDown","event","current","value","length","key","id","title","isEdit","handleOnDelete","className","done","isDone","edit","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onDoubleClick","ref","onKeyDown","defaultValue","_c2","$RefreshReg$"],"sources":["C:/Users/User/alphacamp/todolist-react-starter/src/components/TodoItem.jsx"],"sourcesContent":["import styled from 'styled-components';\r\nimport clsx from 'clsx';\r\nimport { useRef } from 'react';\r\nimport {\r\n  CheckActiveIcon,\r\n  CheckCircleIcon,\r\n  CheckHoverIcon,\r\n} from 'assets/images';\r\n\r\nconst StyledTaskItem = styled.div`\r\n  min-height: 52px;\r\n  display: flex;\r\n  align-items: center;\r\n  position: relative;\r\n  word-wrap: break-word;\r\n  word-break: break-word;\r\n  padding: 0 12px;\r\n  box-shadow: 0 17px 0 -16px #e5e5e5;\r\n  flex-wrap: wrap;\r\n\r\n  .task-item-body-input {\r\n    user-select: none;\r\n    display: none;\r\n    flex: 1;\r\n    padding: 8px 0px;\r\n    border: 0;\r\n    outline: 0;\r\n    font-size: 1rem;\r\n\r\n    &::placeholder {\r\n      color: var(--gray);\r\n      font-size: 13px;\r\n    }\r\n  }\r\n\r\n  &:hover {\r\n    background: #fff3eb;\r\n    box-shadow: inset 0 0 0 1px #fff3eb;\r\n\r\n    .task-item-action .btn-destroy {\r\n      display: inline-flex;\r\n    }\r\n  }\r\n\r\n  &.done {\r\n    .task-item-body {\r\n      color: var(--gray);\r\n      text-decoration: line-through;\r\n    }\r\n\r\n    .icon-checked {\r\n      background-image: url(${CheckActiveIcon});\r\n    }\r\n  }\r\n\r\n  &.edit {\r\n    .task-item-body-input {\r\n      display: block;\r\n    }\r\n    .task-item-body-text {\r\n      display: none;\r\n    }\r\n    .task-item-action {\r\n      display: none;\r\n    }\r\n  }\r\n\r\n  .task-item-checked {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n\r\n  .task-item-body {\r\n    font-weight: 400;\r\n    padding: 8px 12px;\r\n    flex: 1;\r\n    display: flex;\r\n  }\r\n\r\n  .task-item-action {\r\n    .btn-destroy {\r\n      display: none;\r\n      font-size: 30px;\r\n      transition: color 0.2s ease-out;\r\n      font-weight: 300;\r\n      &:after {\r\n        content: '×';\r\n      }\r\n    }\r\n  }\r\n\r\n  .icon-checked {\r\n    background-image: url(${CheckCircleIcon});\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n\r\n    &:hover {\r\n      transition: background-image 0.5s;\r\n      background-image: url(${CheckHoverIcon});\r\n    }\r\n  }\r\n`;\r\n//todo.isEdit\r\nconst TodoItem = ({ todo, onToggleDone, onSave, onDelete, onChangeMode }) => {\r\n  const inputRef = useRef(null);\r\n  const handleKeyDown = (event) => {\r\n    if (inputRef.current.value.length > 0 && event.key === 'Enter') {\r\n      onSave?.({ id: todo.id, title: inputRef.current.value });\r\n    }\r\n    if (event.key === 'Escape') {\r\n      onChangeMode?.({ id: todo.id, isEdit: false });\r\n    }\r\n  };\r\n  const handleOnDelete = () => {\r\n    onDelete?.(todo.id);\r\n  };\r\n\r\n  return (\r\n    <StyledTaskItem\r\n      className={clsx('', { done: todo.isDone, edit: todo.isEdit })}\r\n    >\r\n      <div className=\"task-item-checked\">\r\n        <span\r\n          className=\"icon icon-checked\"\r\n          onClick={() => onToggleDone?.(todo.id)}\r\n        />\r\n      </div>\r\n      <div\r\n        className=\"task-item-body\"\r\n        onDoubleClick={() => {\r\n          onChangeMode?.({ id: todo.id, isEdit: true });\r\n        }}\r\n      >\r\n        <span className=\"task-item-body-text\">{todo.title}</span>\r\n        <input\r\n          ref={inputRef}\r\n          className=\"task-item-body-input\"\r\n          onKeyDown={handleKeyDown}\r\n          defaultValue={todo.title}\r\n        />\r\n      </div>\r\n      <div className=\"task-item-action \">\r\n        <button\r\n          className=\"btn-reset btn-destroy icon\"\r\n          onClick={handleOnDelete}\r\n        />\r\n      </div>\r\n    </StyledTaskItem>\r\n  );\r\n};\r\n\r\nexport default TodoItem;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}