{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/User/alphacamp/todolist-react-starter/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject;import styled from'styled-components';import clsx from'clsx';import{useRef}from'react';import{CheckActiveIcon,CheckCircleIcon,CheckHoverIcon}from'assets/images';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var StyledTaskItem=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  min-height: 52px;\\n  display: flex;\\n  align-items: center;\\n  position: relative;\\n  word-wrap: break-word;\\n  word-break: break-word;\\n  padding: 0 12px;\\n  box-shadow: 0 17px 0 -16px #e5e5e5;\\n  flex-wrap: wrap;\\n\\n  .task-item-body-input {\\n    user-select: none;\\n    display: none;\\n    flex: 1;\\n    padding: 8px 0px;\\n    border: 0;\\n    outline: 0;\\n    font-size: 1rem;\\n\\n    &::placeholder {\\n      color: var(--gray);\\n      font-size: 13px;\\n    }\\n  }\\n\\n  &:hover {\\n    background: #fff3eb;\\n    box-shadow: inset 0 0 0 1px #fff3eb;\\n\\n    .task-item-action .btn-destroy {\\n      display: inline-flex;\\n    }\\n  }\\n\\n  &.done {\\n    .task-item-body {\\n      color: var(--gray);\\n      text-decoration: line-through;\\n    }\\n\\n    .icon-checked {\\n      background-image: url(\",\");\\n    }\\n  }\\n\\n  &.edit {\\n    .task-item-body-input {\\n      display: block;\\n    }\\n    .task-item-body-text {\\n      display: none;\\n    }\\n    .task-item-action {\\n      display: none;\\n    }\\n  }\\n\\n  .task-item-checked {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n  }\\n\\n  .task-item-body {\\n    font-weight: 400;\\n    padding: 8px 12px;\\n    flex: 1;\\n    display: flex;\\n  }\\n\\n  .task-item-action {\\n    .btn-destroy {\\n      display: none;\\n      font-size: 30px;\\n      transition: color 0.2s ease-out;\\n      font-weight: 300;\\n      &:after {\\n        content: '\\xD7';\\n      }\\n    }\\n  }\\n\\n  .icon-checked {\\n    background-image: url(\",\");\\n    background-position: center;\\n    background-repeat: no-repeat;\\n\\n    &:hover {\\n      transition: background-image 0.5s;\\n      background-image: url(\",\");\\n    }\\n  }\\n\"])),CheckActiveIcon,CheckCircleIcon,CheckHoverIcon);//todo.isEdit\nvar TodoItem=function TodoItem(_ref){var todo=_ref.todo,onToggleDone=_ref.onToggleDone,onSave=_ref.onSave,onDelete=_ref.onDelete,onChangeMode=_ref.onChangeMode;var inputRef=useRef(null);var handleKeyDown=function handleKeyDown(event){if(inputRef.current.value.length>0&&event.key==='Enter'){onSave===null||onSave===void 0?void 0:onSave({id:todo.id,title:inputRef.current.value});}if(event.key==='Escape'){onChangeMode===null||onChangeMode===void 0?void 0:onChangeMode({id:todo.id,isEdit:false});}};var handleOnDelete=function handleOnDelete(){onDelete===null||onDelete===void 0?void 0:onDelete(todo.id);};return/*#__PURE__*/_jsxs(StyledTaskItem,{className:clsx('',{done:todo.isDone,edit:todo.isEdit}),children:[/*#__PURE__*/_jsx(\"div\",{className:\"task-item-checked\",children:/*#__PURE__*/_jsx(\"span\",{className:\"icon icon-checked\",onClick:function onClick(){return onToggleDone===null||onToggleDone===void 0?void 0:onToggleDone(todo.id);}})}),/*#__PURE__*/_jsxs(\"div\",{className:\"task-item-body\",onDoubleClick:function onDoubleClick(){onChangeMode===null||onChangeMode===void 0?void 0:onChangeMode({id:todo.id,isEdit:true});},children:[/*#__PURE__*/_jsx(\"span\",{className:\"task-item-body-text\",children:todo.title}),/*#__PURE__*/_jsx(\"input\",{ref:inputRef,className:\"task-item-body-input\",onKeyDown:handleKeyDown,defaultValue:todo.title})]}),/*#__PURE__*/_jsx(\"div\",{className:\"task-item-action \",children:/*#__PURE__*/_jsx(\"button\",{className:\"btn-reset btn-destroy icon\",onClick:handleOnDelete})})]});};export default TodoItem;","map":{"version":3,"names":["styled","clsx","useRef","CheckActiveIcon","CheckCircleIcon","CheckHoverIcon","jsx","_jsx","jsxs","_jsxs","StyledTaskItem","div","_templateObject","_taggedTemplateLiteral","TodoItem","_ref","todo","onToggleDone","onSave","onDelete","onChangeMode","inputRef","handleKeyDown","event","current","value","length","key","id","title","isEdit","handleOnDelete","className","done","isDone","edit","children","onClick","onDoubleClick","ref","onKeyDown","defaultValue"],"sources":["C:/Users/User/alphacamp/todolist-react-starter/src/components/TodoItem.jsx"],"sourcesContent":["import styled from 'styled-components';\r\nimport clsx from 'clsx';\r\nimport { useRef } from 'react';\r\nimport {\r\n  CheckActiveIcon,\r\n  CheckCircleIcon,\r\n  CheckHoverIcon,\r\n} from 'assets/images';\r\n\r\nconst StyledTaskItem = styled.div`\r\n  min-height: 52px;\r\n  display: flex;\r\n  align-items: center;\r\n  position: relative;\r\n  word-wrap: break-word;\r\n  word-break: break-word;\r\n  padding: 0 12px;\r\n  box-shadow: 0 17px 0 -16px #e5e5e5;\r\n  flex-wrap: wrap;\r\n\r\n  .task-item-body-input {\r\n    user-select: none;\r\n    display: none;\r\n    flex: 1;\r\n    padding: 8px 0px;\r\n    border: 0;\r\n    outline: 0;\r\n    font-size: 1rem;\r\n\r\n    &::placeholder {\r\n      color: var(--gray);\r\n      font-size: 13px;\r\n    }\r\n  }\r\n\r\n  &:hover {\r\n    background: #fff3eb;\r\n    box-shadow: inset 0 0 0 1px #fff3eb;\r\n\r\n    .task-item-action .btn-destroy {\r\n      display: inline-flex;\r\n    }\r\n  }\r\n\r\n  &.done {\r\n    .task-item-body {\r\n      color: var(--gray);\r\n      text-decoration: line-through;\r\n    }\r\n\r\n    .icon-checked {\r\n      background-image: url(${CheckActiveIcon});\r\n    }\r\n  }\r\n\r\n  &.edit {\r\n    .task-item-body-input {\r\n      display: block;\r\n    }\r\n    .task-item-body-text {\r\n      display: none;\r\n    }\r\n    .task-item-action {\r\n      display: none;\r\n    }\r\n  }\r\n\r\n  .task-item-checked {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n\r\n  .task-item-body {\r\n    font-weight: 400;\r\n    padding: 8px 12px;\r\n    flex: 1;\r\n    display: flex;\r\n  }\r\n\r\n  .task-item-action {\r\n    .btn-destroy {\r\n      display: none;\r\n      font-size: 30px;\r\n      transition: color 0.2s ease-out;\r\n      font-weight: 300;\r\n      &:after {\r\n        content: 'Ã—';\r\n      }\r\n    }\r\n  }\r\n\r\n  .icon-checked {\r\n    background-image: url(${CheckCircleIcon});\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n\r\n    &:hover {\r\n      transition: background-image 0.5s;\r\n      background-image: url(${CheckHoverIcon});\r\n    }\r\n  }\r\n`;\r\n//todo.isEdit\r\nconst TodoItem = ({ todo, onToggleDone, onSave, onDelete, onChangeMode }) => {\r\n  const inputRef = useRef(null);\r\n  const handleKeyDown = (event) => {\r\n    if (inputRef.current.value.length > 0 && event.key === 'Enter') {\r\n      onSave?.({ id: todo.id, title: inputRef.current.value });\r\n    }\r\n    if (event.key === 'Escape') {\r\n      onChangeMode?.({ id: todo.id, isEdit: false });\r\n    }\r\n  };\r\n  const handleOnDelete = () => {\r\n    onDelete?.(todo.id);\r\n  };\r\n\r\n  return (\r\n    <StyledTaskItem\r\n      className={clsx('', { done: todo.isDone, edit: todo.isEdit })}\r\n    >\r\n      <div className=\"task-item-checked\">\r\n        <span\r\n          className=\"icon icon-checked\"\r\n          onClick={() => onToggleDone?.(todo.id)}\r\n        />\r\n      </div>\r\n      <div\r\n        className=\"task-item-body\"\r\n        onDoubleClick={() => {\r\n          onChangeMode?.({ id: todo.id, isEdit: true });\r\n        }}\r\n      >\r\n        <span className=\"task-item-body-text\">{todo.title}</span>\r\n        <input\r\n          ref={inputRef}\r\n          className=\"task-item-body-input\"\r\n          onKeyDown={handleKeyDown}\r\n          defaultValue={todo.title}\r\n        />\r\n      </div>\r\n      <div className=\"task-item-action \">\r\n        <button\r\n          className=\"btn-reset btn-destroy icon\"\r\n          onClick={handleOnDelete}\r\n        />\r\n      </div>\r\n    </StyledTaskItem>\r\n  );\r\n};\r\n\r\nexport default TodoItem;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}